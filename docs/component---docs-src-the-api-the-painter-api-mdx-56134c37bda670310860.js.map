{"version":3,"sources":["webpack:///../docs-src/the-api/the-painter-api.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","interfaceMetadata","IPainterAPI","isMDXComponent"],"mappings":"ggBAQO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,6LACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAwBC,kBAAmBC,EAAaF,QAAQ,4B,6MAKpEH,EAAWM,gBAAiB","file":"component---docs-src-the-api-the-painter-api-mdx-56134c37bda670310860.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/ASUS/Code/react-super-canvas/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { InterfaceDocumentation } from '../InterfaceDocumentation';\nimport IPainterAPI from '../../meta/interfaces/IPainterAPI';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"the-painter-api\"\n    }}>{`The Painter API`}</h1>\n    <p>{`The painter api is an API for virtually rendering things absolutely to the HTML5 canvas element. This should always be used instead of the canvas rendering context.`}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <InterfaceDocumentation interfaceMetadata={IPainterAPI} mdxType=\"InterfaceDocumentation\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}